[{"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/index.js":"1","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/mapStyles.js":"2","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/App.js":"3","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/reportWebVitals.js":"4","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/RenderRoutes.js":"5","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/Home.js":"6","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/Map.js":"7","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/Incidents.js":"8"},{"size":289,"mtime":1606782894227,"results":"9","hashOfConfig":"10"},{"size":3344,"mtime":1606703977952,"results":"11","hashOfConfig":"10"},{"size":323,"mtime":1606949170674,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1606693466207,"results":"13","hashOfConfig":"10"},{"size":1081,"mtime":1606949093472,"results":"14","hashOfConfig":"10"},{"size":1074,"mtime":1606948642321,"results":"15","hashOfConfig":"10"},{"size":6936,"mtime":1606949362819,"results":"16","hashOfConfig":"10"},{"size":2118,"mtime":1606949145192,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1h305qg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/index.js",[],["37","38"],"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/mapStyles.js",["39"],"export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    }\n]","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/App.js",[],"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/reportWebVitals.js",[],"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/RenderRoutes.js",[],"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/Home.js",[],"/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/Map.js",["40","41","42","43"],"import React from 'react';\nimport { \n    GoogleMap, \n    useLoadScript,\n    Marker,\n    InfoWindow, \n} from '@react-google-maps/api';\nimport { formatRelative } from \"date-fns\";\nimport usePlacesAutocomplete, {\n    getGeocode, \n    getLatLng,\n} from \"use-places-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n  } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from './mapStyles';\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vh\",\n};\nconst center = {\n  lat: -37.8136,\n  lng: 144.9631, \n}; \nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nfunction Map({ markers, setMarkers }) {\n\n    const { isLoaded, loadError } = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries,\n    });\n    const [selected, setSelected] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const [input, setInput] = React.useState('');\n  \n    const onMapClick = React.useCallback((e) => {\n      Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\n        response => {\n          const address = response.results[0].formatted_address;\n          setMarkers((current) => [\n            ...current,\n            {\n              lat: e.latLng.lat(),\n              lng: e.latLng.lng(),\n              time: new Date(),\n              description: \"\",\n              location: address\n            }\n          ]);\n        },\n        error => {\n          console.error(error);\n        }\n      ) \n    }, []);\n  \n    const onMapDrag = React.useCallback((e, index) => {\n      Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\n        response => {\n          const address = response.results[0].formatted_address;\n          setMarkers((current) => {\n            const markers = [...current];\n            markers[index] = { \n            lat: e.latLng.lat(),\n            lng: e.latLng.lng(),\n            time: new Date(),\n            description: markers[index].description, \n            location: address\n            }\n            return markers;\n          });\n        },\n        error => {\n          console.error(error);\n        }\n      ) \n    }, []);\n  \n    const updateDescription = React.useCallback((e) => {\n      setInput(e.target.value);\n      if (e.target.value.length > 0) {\n        setLoading(true)\n      } else {\n        setLoading(false)\n      }\n    })\n  \n    const onSubmit = React.useCallback((e) => {\n      e.preventDefault();\n      markers[markers.indexOf(selected)].description = `${input}`;\n      setLoading(false);\n      setInput('');\n    })\n  \n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n  \n    const panTo = React.useCallback(({lat, lng}) => {\n      mapRef.current.panTo({lat, lng});\n      mapRef.current.setZoom(14);\n    }, []);\n      \n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n  \n    return (\n      <div>\n        <h1 className=\"title\">ReportIt</h1>\n        <h2 className=\"subtitle\">Pin an incident near you</h2>\n  \n        <Search panTo={panTo}/>\n        <Locate panTo={panTo}/>\n  \n        <GoogleMap \n          mapContainerStyle={mapContainerStyle} \n          zoom={12} \n          center={center} \n          options={options}\n          onClick={onMapClick}\n          onLoad={onMapLoad}\n        >\n          {markers.map((marker, index) => (\n            <Marker \n              key={index}\n              time={marker.time.toISOString()}\n              position={{lat: marker.lat, lng: marker.lng}}\n              draggable={true}\n              icon={{\n                url: '/car.png',\n                scaledSize: new window.google.maps.Size(30,30),\n                origin: new window.google.maps.Point(0,0),\n                anchor: new window.google.maps.Point(15,15),\n              }}\n              onClick={() => {\n                setSelected(marker);\n              }}\n              onDragEnd={\n                (e) => onMapDrag(e, index)\n              }\n            />\n          ))}\n   \n          {selected ? (\n            <InfoWindow\n            position={{lat: selected.lat, lng: selected.lng}} \n            onCloseClick={() => {setSelected(null)}}\n            >\n              <div>\n                <h2>Incident Reported!</h2>\n                <form \n                  action=\"\"\n                  onSubmit={onSubmit}>\n                    <label htmlFor=\"\">Add an update:</label>\n                    <input\n                      className=\"update-input\"\n                      value={input} \n                      onChange={\n                        (e) => updateDescription(e)\n                      }\n                    />\n                  <button>Update</button>\n                  {loading ? <span className=\"loading\">🔷</span> : ''}\n                </form>\n                <p>Latest Update: {selected.description}</p>  \n                <p>Location: {selected.location} </p>\n                <p>Reported: { formatRelative(selected.time, new Date()) }</p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n      </div>\n    )\n};\n\nfunction Search({panTo}) {\n    const {\n      ready, \n      value, \n      suggestions: {status, data}, \n      setValue, \n      clearSuggestions\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: {lat: () => -37.700560, lng: () => 144.736810 },\n        radius: 20 * 1000,\n      }\n    })\n  \n    return (\n      <Combobox onSelect={async (address) => {\n  \n        setValue(address, false);\n        clearSuggestions();\n  \n        try {\n          const results = await getGeocode({address});\n          const { lat, lng } = await getLatLng(results[0]);\n          panTo({ lat, lng });\n        } catch(error) {\n        console.log(\"error!\")\n        }\n      }}>\n    \n      <ComboboxInput \n        value={value} \n        onChange={(e) => {\n          setValue(e.target.value)\n        }} \n        disabled={!ready}\n        placeholder=\"Enter a location\"\n        className=\"search\"\n      />\n    \n      <ComboboxPopover>\n        <ComboboxList>\n        {status === \"OK\" && \n        data.map(({id, description}) => \n          <ComboboxOption key={id} value={description} />)}\n          </ComboboxList>\n          </ComboboxPopover>\n      </Combobox>\n    ); \n};\n\nfunction Locate({panTo}) {\n    return ( \n      <button className=\"locate\" onClick={() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n          panTo({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          })\n        }, () => null)\n      }}>\n        <img src=\"compass.png\" alt=\"compass - pin to locate me\" />\n        <p className=\"description\">Find my current location</p>\n      </button>\n    );\n};\n\nexport default Map","/Users/adenrashid/seir/code-alongs/12-project-4/ReportIt/src/Incidents.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":1,"nodeType":"50","endLine":167,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":68,"column":8,"nodeType":"53","endLine":68,"endColumn":10,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"52","line":90,"column":8,"nodeType":"53","endLine":90,"endColumn":10,"suggestions":"55"},{"ruleId":"51","severity":1,"message":"56","line":92,"column":31,"nodeType":"57","endLine":92,"endColumn":48},{"ruleId":"51","severity":1,"message":"56","line":101,"column":22,"nodeType":"57","endLine":101,"endColumn":39},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'setMarkers'. Either include it or remove the dependency array. If 'setMarkers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["60"],["61"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"62","fix":"64"},"Update the dependencies array to be: [setMarkers]",{"range":"65","text":"66"},{"range":"67","text":"66"},[1668,1670],"[setMarkers]",[2316,2318]]